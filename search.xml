<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[后知后觉的方法论(一)]]></title>
      <url>%2F2017%2F02%2F22%2F%E5%90%8E%E7%9F%A5%E5%90%8E%E8%A7%89%E7%9A%84%E6%96%B9%E6%B3%95%E8%AE%BA-%E4%B8%80%2F</url>
      <content type="text"><![CDATA[方法论研一下学期一开学就慢慢的意识到找工作的问题，我是专硕所以研究生有两年时间，虽然实验室也规定了实习的时间，但是自己能不能找到好的实习还真的需要好好的思考一番。 经过一段时间的思考之后，真的发现再来实验室的这八个月里面，自己的成长真的处于一种非常被动，非常低级的状态，负责了很多东西，但是很多东西只是处于一种简单的使用状态。如果设想我跟面试的人说我做过什么的话，我真的说不出口我做的这些东西，只要是一个比较认真的人都能完成这些重复性的工作。我所做的这些对实验室是能保证系统稳定的，但是对于我自己却没有任何的提高，除了稍微熟悉了一些命令和东西，但是自己尝试的东西太少，总结的东西太少，如果真的要我说出做过哪些东西，没有什么能够说的。 所以我也学会了自己的“强迫症”，对出现的bug零容忍，对自己的任务超时零容忍，对一些简单的不实用的代码设计零容忍，对自己不规范的一些东西零容忍…… 上了计算机网络课再一次认识了方法论 ，上网络课有两个感悟： 很多时候老师 老板 过来人都会给我们讲很多很有用的思维方法，但是作为一个有思想的成年人，有时候听了跟没有听一样，但是觉得还是挺好的，到生活中的时候有回到自己习惯的思维方式上面去了。以前为什么成绩好，为什么学习快，因为自己没有形成自己的思维方式，很能挺长辈的话，所以做什么东西思路都是还蛮开阔的。习惯是那么难改，但是好的东西真的要尝试着去学习，真的有时候没有思路没有方向，套路就那几个，记住了就能拿来套了，其他的就是根据经验按照套路能够很快的做出反应了。 学会思考学会总结，为什么要设计TCP/IP和如何设计TCP/IP，这两个问题充分说明课堂的知识仅仅知识一个引导作用，总结的思考的东西都需要自己来做，如果没有这种思考，一些重要的东西永远不会属于我们，我们也说不出个123来。 看了一些招聘实习生的要求，除了一些重要的技术基础以外，还需要我们是一个喜欢思考充满活力积极有创造力的，能够给团队带来一些好的东西，无论是技术上的还是思想上的创新上的。那么我反问我自己，我有什么优势呢？我说不出来，难道说我就做了服务器的部署？java后台开发写一点业务逻辑处理？整理了一些框架的知识？nginx会一点点命令会转发？实验室项目负责人？非常积极努力能够影响别人？ 那么我就要问了，用的什么服务器，服务器部署过程是什么样子的，为什么用这个服务器，服务器部署的时候出现过什么印象深刻的事情，是如何控制安全问题的？你们公司java后台框架用的什么，为什么要用这个框架，这个框架跟其他框架的有什么区别？SpringMVC框架源码你了解到什么程度，hibernate框架源码了解吗，框架中的设计模式了解到什么程度，如何进行版本控制，在没有其他帮助的方式下能够自己配置相关框架吗？JVM原理清楚吗，简单说一下通常需要配置哪些信息来优化java开发，进行过java并发编程吗如何实现的？数据库用过什么，mysql的一些配置说一下，用过mangoDB吗，用过阿里的什么产品，觉得怎么样？nginx相比其他的做服务器的优势是什么，它有哪些非常重要的命令？计算机网络如何分层，说一下每一层的特点和作用，说一下http https的区别，说一下get方法和post方法的区别，简单描述一下一个请求的全过程？你是如何管理实验室的项目的，有没有什么特别的方法进行项目管理，平时有没有遇到什么不好解决的问题最后如何解决的，你是如何调动项目成员的积极性的？你觉得你来我们这里能够带来什么，我们能够给你提供什么？ 上面的每一个反问句我都觉得好可怕， 因为我说不出什么东西来，没有经验，跟没有总结，就像一个问题来了，相关的背景知识也不知道，那怎么回答问题。一个问题来了最先知道大背景是什么，然后考虑解决了什么问题，然后考虑他的设计与实现。这是一个思考的套路。根据情况变化。 方法论总结出来有三种： 排列组合自己想出来的新方法。 发现旧方法中的缺点，然后在旧方法的基础上进行改进得出新方法 用另外一个领域的方法来解决自己领域的问题 说到上面的那些问题，我觉得我并不会很慌张，我有信息将上面的问题一一解决掉。一方面自己本地其实是可以测试非常多的东西的，一方面网络上也有相关的非常多的总结，这些都是可以用来学习和总结的，但是必须经过自己的实践来体会这些东西，真正的思考这些东西，才能把一些理论的东西变成真正可以说给别人听 交付给别人东西。我也跟别人说过，一个人思考的越多 就越有主见，越有主见 就越有说服别人的资本，越有资本 就越自信，越自信 思考一个东西的时候越会产生一些新的想法，这是一个良性循环。 一直活在自己思维里的年轻人，很容易思路越来越窄。特别是自己遇到问题，然后经常思路不是很通顺的时候，就要刻意的训练一下自己的思维方法，多思考多总结，思维方法形成习惯，很多事情就能比较快的找到解决方法，那么也就会很快的进入舒适区，进入好像什么都会的境界，这个时候就要把自己置身于一个更好的层次来重新训练自己的思维方式了。 stay foolish stay hungry]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何在一个小时内搭建好自己的博客]]></title>
      <url>%2F2017%2F02%2F19%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%86%85%E6%90%AD%E5%BB%BA%E5%A5%BD%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[说明 搭建自己的博客是一件蛮有趣的事情，有很多种搭建博客的方式，之前就接触过WordPress。最近看到用hexo在github上搭建博客，在布局和搭建上非常的简便，能很快的搭建出自己的一个blog，当然这也是一个问题，当我们想要修改界面的时候就需要进行一些思考。接下来，就是简答的介绍如何一个小时搭建出自己的博客。 一、搭建步骤安装步骤 默认安装git客户端，下载地址 记得勾选上 simple comtext menu 和下面的 git bash here / git gui here cmd 中 git –version 查看版本信息 默认安装node.js，下载地址 node -v 查看node版本 npm -v 查看npm版本，node package managers github上创建仓库 ,yourname.git.io (如CatterMCG.git.io) 创建一个新的hexo的分支用于管理网站文件，在setting中选branch将hexo update为默认分支； master分支用于发布网站（github默认需要master来管理发布的网站） 新建新的分支hexo 并将hexo设置为默认分支非常重要 因为： 我们一般在同一台机器上进行博客的编写，但是在新的电脑上进行编写也是非常正常的需求，所以我们需要有一个分支用于管理网站的文件，在另外一台电脑上需要的时候只需要clone下来，然后编写就好了。如何在第二台电脑上进行编写会在后面说明。 不能保证我们本地的东西不会丢失，所以我们用github来 保存我的项目 在本地的 yourname.git.io 文件夹下新建一个hexo文件夹，然后依次执行下面指令 npm install hexo 用npm安装hexo hexo init hexo初始化 npm install npm自动安装需要的组件 npm install hexo-deployer-git –save 安装hexo git部署组件 (由于设置的默认分支是hexo，所以上面的所有的操作都是hexo分支下的) 说明 在项目中新建一个hexo的原因是，hexo init指令会自动将文件中的 .git文件删除，将东西放在一个新建的hexo文件夹里面很安全 如果安装网站上的直接在 yourname.git.io 文件夹下进行上面指令， .git 文件会删除，此时再重新建个git init, git checkout -b hexo分支就好了（window下） 6.修改hexo文件夹下的 _config.yml文件中的deploy参数,如下 deploy: type: git repo: git@github.com:CatterMCG/CatterMCG.github.io.git branch: master 7.依次执行下面命令 git add . 添加所有文件 git commit -m “first commit” 提交添加的文件，提交信息是 first commit（注意分支是hexo） git push origin hexo 推送到github（可以自己去github项目中查看文件 是否推送成功） 8.执行 hexo d -g 将项目生产网站 并 部署到github上，可以在用yourname.git.io 访问 如 cattermcg.git.io 日常改动流程： 修改配置，写博客等操作，用hexo s -debug 运行，在localhost:4000调试 git add . / git commit -m “…” / git push origin hexo 将项目推送到github上 hexo d -g 将项目部署到github上 在不同的电脑上写博客： 安装git 和 node.js git clone git@github.com:CatterMCG/CatterMCG.github.io.git 将repo克隆到本地 在 CatterMCG.github.io 文件夹下 git bash 依次执行 npm hexo npm install npm hexo-deployer-git –save 切记：此时不用hexo init 修改配置，写博客，跟前面的操作相同 二、hexo命令的简单使用 hexo new post “title” 新建一片md类型的文章 hexo g生产项目 hexo s 开始项目，这个时候可以在localhost:4000访问本地的网站 hexo d 部署项目到github上 日常使用的方式是： 在本地测试的时候，用 hexo s -debug，这用于本地开启服务 在localhost:4000 测试自己的博客 本地测试完毕想部署，用 hexo d -g，将项目部署到github ，其他的hexo 基本用不上 三、hexo网站和theme中的重要设置基本设置 主题风格配置 菜单配置 头像配置 设置文章代码主题 添加tag页面 添加categories页面 添加about页面 添加search功能 请查看详细操作：http://www.cnblogs.com/syd192/p/6074323.html 引入第三方 使用 多说 添加 评论区 使用 多说 添加 分享功能 1 2 继续查看文章 http://www.cnblogs.com/syd192/p/6074323.html 使用 leancloud 添加显示 阅读量：leanCloud实现文章阅读量统计 官方 NexT 官网 NexT的github地址 有哪些好看的hexo主题 四、有些坑不要踩 用leancloud设置阅读量的时候，class一定要为Counter 访问量竟然出现了1:1:1:1 的形式，原因是在leancloud的数据库中查询到了相同的文章有两条记录，把最开始的一条访问量记录为1的删除了就可以了 搭建hexo，在执行 hexo deploy后，出现 error deployer not found:github 的错误 重现用npm install hexo-deployer-git –save就好了 出现hexo command not found 的时候 用对应的 nodemoudle路劲下的 （G:\hexo\node_modules.bin）将其添加到系统环境变量中，或者把 nodemoudle下hexo 里面 的 bin添加进去 如果想要在多台电脑上进行管理的话，真的要有新的 branch 或者 repo来管里hexo的东西，发布的东西在yourname.git.io这个repo的master分支上；具体的相关操作上面都有 ​]]></content>
    </entry>

    
  
  
</search>
